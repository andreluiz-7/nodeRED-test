[{"id":"1f0b475c410567ac","type":"tab","label":"Fluxo 1","disabled":false,"info":"","env":[]},{"id":"c183a5c185e44947","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#ac4f11","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#ac4f11","edited":true},"page-titlebar-backgroundColor":{"value":"#ac4f11","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#e97120","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#ac4f11","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"cyan","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"e59d39ce43338173","type":"ui_tab","name":"Corretoras","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"553086970630270b","type":"ui_group","name":"Lista Corretoras","tab":"e59d39ce43338173","order":1,"disp":true,"width":"6","collapse":false,"className":""},{"id":"b094aa12514ae0c4","type":"ui_tab","name":"Busca CEP","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"1c06e2c6386e7d75","type":"ui_group","name":"BuscaCEP","tab":"b094aa12514ae0c4","order":1,"disp":true,"width":"6","collapse":false,"className":""},{"id":"b2d24a317d51fca3","type":"http request","z":"1f0b475c410567ac","name":"","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://brasilapi.com.br/api/cvm/corretoras/v1","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":300,"y":80,"wires":[["1d7ad69e8ae88965"]]},{"id":"b130c6b79e9fce29","type":"debug","z":"1f0b475c410567ac","name":"saidaCorretoras","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":860,"y":140,"wires":[]},{"id":"7079008216423cca","type":"function","z":"1f0b475c410567ac","name":"buscaCorretoras","func":"let corretoras = msg.payload;\n\n// Mapeia a lista para retornar apenas os campos necessários (nome, cidade, CNPJ)\nlet resultado = corretoras.map(corretora => {\n    return {\n        nome: corretora.nome_social,\n        cidade: corretora.municipio,\n        cnpj: corretora.cnpj\n    };\n});\n\n// Define o novo payload com os dados filtrados\nmsg.payload = resultado;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":80,"wires":[["3e0406d7935faa74"]]},{"id":"f758d6145f972117","type":"ui_button","z":"1f0b475c410567ac","name":"","group":"553086970630270b","order":1,"width":0,"height":0,"passthru":false,"label":"Gerar Lista Corretoras","tooltip":"","color":"","bgcolor":"","className":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":100,"y":80,"wires":[["b2d24a317d51fca3"]]},{"id":"3e0406d7935faa74","type":"ui_template","z":"1f0b475c410567ac","group":"553086970630270b","name":"","order":2,"width":"6","height":"6","format":"<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Nome</th>\n            <th>Cidade</th>\n            <th>CNPJ</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat=\"corretora in msg.payload\">\n            <td>{{corretora.nome}}</td>\n            <td>{{corretora.cidade}}</td>\n            <td>{{corretora.cnpj}}</td>\n        </tr>\n    </tbody>\n</table>\n\n<style>\n    \n    .table th, .table td {\n        padding: 10px;\n        border: 1px solid #ddd;\n        text-align: left;\n    }\n\n</style>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":840,"y":80,"wires":[["b130c6b79e9fce29"]]},{"id":"1d7ad69e8ae88965","type":"json","z":"1f0b475c410567ac","name":"","property":"payload","action":"","pretty":false,"x":470,"y":80,"wires":[["7079008216423cca"]]},{"id":"6a68f5f13b373e61","type":"ui_button","z":"1f0b475c410567ac","name":"","group":"1c06e2c6386e7d75","order":2,"width":0,"height":0,"passthru":false,"label":"Buscar CEP","tooltip":"","color":"","bgcolor":"","className":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":130,"y":320,"wires":[["1b46bc24b2c71ae2"]]},{"id":"633e1a8894f1093f","type":"http request","z":"1f0b475c410567ac","name":"","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":480,"y":320,"wires":[["175dcc6a82743ec2","33c22954647e8549"]]},{"id":"64147ea9838f0422","type":"ui_text_input","z":"1f0b475c410567ac","name":"","label":"Digite o CEP","tooltip":"","group":"1c06e2c6386e7d75","order":1,"width":0,"height":0,"passthru":true,"mode":"text","delay":"300","topic":"payload","sendOnBlur":true,"className":"","topicType":"msg","x":130,"y":240,"wires":[["b752aa0317a687c6"]]},{"id":"1b46bc24b2c71ae2","type":"function","z":"1f0b475c410567ac","name":"getCep","func":"let cep = flow.get('cep');  // Obtém o CEP armazenado no fluxo\nif (!cep) {\n    msg.payload = \"CEP não inserido!\";\n    return msg;\n}\n\nmsg.url = `https://brasilapi.com.br/api/cep/v2/${cep}`;  // Monta a URL para a API\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":320,"wires":[["633e1a8894f1093f"]]},{"id":"b752aa0317a687c6","type":"change","z":"1f0b475c410567ac","name":"","rules":[{"t":"set","p":"cep","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":320,"y":240,"wires":[[]]},{"id":"175dcc6a82743ec2","type":"debug","z":"1f0b475c410567ac","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":680,"y":260,"wires":[]},{"id":"7c7543a1e0af7265","type":"ui_template","z":"1f0b475c410567ac","group":"1c06e2c6386e7d75","name":"","order":3,"width":"0","height":"0","format":"<div> \n    <h3>Detalhes do CEP:</h3>\n        <p><strong>CEP: {{msg.payload.cep}}</p>\n        <p><strong>Rua:{{msg.payload.street}}</p>\n        <p><strong>Bairro: {{msg.payload.neighborhood}}</p>\n        <p><strong>Cidade {{msg.payload.city}}</p>\n        <p><strong>Estado:{{msg.payload.state}}</p>\n</div>\n\n<div>\n    <h3>Status da Requisição:</h3>\n    <p>{{msg.payload.message}}</p>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":840,"y":320,"wires":[[]]},{"id":"33c22954647e8549","type":"function","z":"1f0b475c410567ac","name":"retornoCep","func":"if (msg.error) {\n    // Se houve erro de conexão ou servidor não respondeu\n    msg.payload.message = \"Erro de conexão. O servidor não respondeu.\";\n    return msg;\n}\n\nif (msg.statusCode === 200 && msg.payload && msg.payload.cep) {\n    // Sucesso: CEP encontrado\n    msg.payload.message = 'CEP encontrado'\n    return msg;\n} else if (msg.statusCode === 404) {\n    // CEP não encontrado\n    msg.payload.message = \"CEP não encontrado!\";\n    return msg;\n} else {\n    // Outro erro de requisição (ex: 500)\n    msg.payload.message = `Erro na requisição: ${msg.statusCode}. Tente novamente mais tarde.`;\n    return msg;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":320,"wires":[["7c7543a1e0af7265"]]}]